{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.jsx","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessage","newMessageBody","type","dialogsReducer","state","action","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","objPromName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","filter","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","props","className","classes","header","src","alt","loginBlock","onClick","to","HeaderContainer","this","React","Component","connect","Navbar","nav","item","activeClassName","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","cn","selectedPage","pageNumber","e","User","user","photos","small","userPhoto","disabled","some","Users","key","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","page","totalCount","bind","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","Input","required","formSummaryError","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","withRouter","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","placeholder","component","validators","text","validate","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","posts","likesCount","newPostText","profile","addPost","setUserProfile","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.ef6c74ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3io1o\",\"item\":\"Navbar_item__19iTU\",\"active\":\"Navbar_active__5v4Js\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Max\"},\r\n        {id: 2, name: \"Eugene\"},\r\n        {id: 3, name: \"Danya\"},\r\n        {id: 4, name: \"Anton\"},\r\n        {id: 5, name: \"Ivan\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"Yo\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: action.newMessageBody}]\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2tyLU\"};","module.exports = __webpack_public_path__ + \"static/media/user.fd114c73.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.5ef4f49b.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"2b7de3bb-e1de-404a-b362-bc14c6897b07\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    follow(userId) {\r\n        return (\r\n            instance.post(`follow/${userId}`)\r\n        )\r\n    },\r\n    unfollow(userId) {\r\n        return (\r\n            instance.delete(`follow/${userId}`)\r\n        )\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return (\r\n            profileAPI.getProfile(userId)\r\n        )\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {status: status})\r\n        )\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n        )\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (\r\n            instance.post(`auth/login`, {email, password, rememberMe})\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        )\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    \r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPromName, newObjProps) => {\r\n    return items.map(u => {\r\n        if(u[objPromName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USER';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHIND = 'TOGGLE-IS-FETCHIND';\r\nconst TOGGLE_IN_FOLLOWING_PROGRESS = 'TOGGLE-IN-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHIND:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IN_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHIND, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IN_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth) => ({type: SET_USER_DATA, payload: {userId, login, email, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://www.logaster.ru/static/v3/img/products/logo.png' alt=\"\" />\r\n            <div className={classes.loginBlock}>\r\n                { props.isAuth ?\r\n                    <div>{props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n                    <NavLink to={'/login'}>Login</NavLink>\r\n\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n}) (HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.css';\r\nimport cn from 'classname';\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize );\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                    return <span className={cn ({[classes.selectedPage]: currentPage === p}, classes.pageNumber)} onClick={(e) => {onPageChanged(p)}}>{p} </span>\r\n                })\r\n            }\r\n            {\r\n                portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport classes from './Users.module.css';\r\nimport userPhoto from \"./../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={classes.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {follow(user.id)}}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress} unfollow={props.unfollow} follow={props.follow} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followSuccess,\r\n    unfollowSuccess,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n                    <Preloader />\r\n                    : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        followSuccess,\r\n        unfollowSuccess,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n) (UsersContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", Input, [required])}\r\n            {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", Input, null, {type: \"checkbox\"}, \"remember me\")}\r\n            {\r\n                error && <div className={classes.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm ({\r\n    form: \"login\"\r\n}) (LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n}) (Login);","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n      return <Suspense fallback={<Preloader/>}>\r\n          <Component {...props}/>\r\n      </Suspense>\r\n  }\r\n};","import React from 'react';\nimport {Route, withRouter} from 'react-router-dom';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>;\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\n                    <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nexport default compose (\n    withRouter,\n    connect (mapStateToProps, {\n        initializeApp\n    })\n) (App);\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport classes from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n      <div className={`${classes.formControl} ${hasError ? classes.error : \"\"}`}>\r\n          <div>\r\n              {children}\r\n          </div>\r\n          { hasError && <span>{error}r</span> }\r\n      </div>\r\n  )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n      <FormControl {...props}>\r\n          <textarea {...input} {...restProps} />\r\n      </FormControl>\r\n  )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validators, props, text) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/> {text}\r\n    </div>\r\n);","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div style={ {backgroundColor: 'white'} } >\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3WBAe\",\"error\":\"FormsControls_error__GnZ-p\",\"formSummaryError\":\"FormsControls_formSummaryError__21JPv\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2xg0B\",\"loginBlock\":\"Header_loginBlock__1rpp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__19NhO\",\"pageNumber\":\"Paginator_pageNumber__2qhn6\",\"selectedPage\":\"Paginator_selectedPage__3EAGb\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 20},\r\n        {id: 3, message: \"Blablabla\", likesCount: 30},\r\n        {id: 4, message: \"Shalom\", likesCount: 50},\r\n    ],\r\n    newPostText: 'hhh',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}