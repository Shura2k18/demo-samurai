{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcpMC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAS,UAAKC,IAAQC,OAAb,YAAuBD,IAAQE,SACzC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCvBC,EARC,SAACT,GAEb,OACI,yBAAKG,UAAWC,IAAQM,SAAUV,EAAMU,U,iCCwB1CC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAbL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,qBAAsBC,SAAU,CAACC,IAAUZ,MAEhH,6BACI,6CAUDa,EAzCC,SAACxB,GAEb,IAAIyB,EAAkBzB,EAAM0B,YAAYC,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMN,GAAI2B,EAAE3B,QACtF4B,EAAmB9B,EAAM0B,YAAYK,SAASH,KAAK,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAMhF,OACI,yBAAKP,UAAWC,IAAQuB,SACpB,yBAAKxB,UAAWC,IAAQ6B,cAClBR,GAEN,yBAAKtB,UAAWC,IAAQ2B,UACpB,6BAAOD,GACP,kBAACjB,EAAD,CAAqBG,SAXb,SAACkB,GACjBlC,EAAMmC,YAAYD,EAAOE,sB,wDCV7BC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,OCOZE,sBACXC,aAPkB,SAACJ,GACnB,MAAO,CACHZ,YAAaY,EAAMZ,eAKE,CACrBS,mBDLwB,SAACQ,GAAe,IACxCC,EADuC,iLAGrC,OAAKC,KAAK7C,MAAMuC,OACT,kBAACI,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUO,GAAI,eAHR,GACbuC,IAAMH,WAStC,OAFAC,EAAoBF,YAAQL,EAARK,CAAqCE,KCL5CH,CAKZjB","file":"static/js/4.e814f69d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2z96Y\",\"dialogsItems\":\"Dialogs_dialogsItems__TpjtW\",\"active\":\"Dialogs_active__23Knp\",\"dialog\":\"Dialogs_dialog__f1VM0\",\"messages\":\"Dialogs_messages__2BSZ4\",\"message\":\"Dialogs_message__2ECY9\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map( d => <DialogItem name={d.name} id={d.id} /> );\r\n    let messagesElements = props.dialogsPage.messages.map( m => <Message message={m.message} /> );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}> \r\n            <div className={classes.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter your message\"} validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n}) (AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n      render() {\r\n          if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n          return <Component {...this.props} />\r\n      }\r\n  }\r\n\r\n  RedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n  return RedirectComponent\r\n};","import React from 'react';\r\nimport { sendMessage } from './../../redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage\r\n    }),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}